plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jreleaser' version '1.18.0'
}

group = 'software.coley'
version = '1.0.4'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'

    compileOnly group: 'org.ow2.asm', name: 'asm', version: '9.7.1'
    compileOnly group: 'org.ow2.asm', name: 'asm-tree', version: '9.7.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }

    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Agent-Class': 'software.coley.fxaccess.Agent',
                'Premain-Class': 'software.coley.fxaccess.Agent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true'
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java

            pom {
                name = project.group
                description = 'A Java agent to detect improper FX thread access.'
                url = 'https://github.com/Col-E/javafx-access-agent'
                inceptionYear = '2025'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
                developers {
                    developer {
                        id = 'Col-E'
                        name = 'Matt Coley'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/Col-E/javafx-access-agent.git'
                    developerConnection = 'scm:git:ssh://github.com/Col-E/javafx-access-agent.git'
                    url = 'https://github.com/Col-E/javafx-access-agent'
                }
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'RELEASE'
        mode = 'MEMORY'
        armored = true
        verify = true
        artifacts = true
        checksums = true
        files = false
    }
    release {
        github {
            overwrite = true
            tagName = project.version
            changelog {
                formatted = 'ALWAYS'
                preset = 'conventional-commits'
                contributors {
                    format = '- {{contributorName}}{{#contributorUsernameAsLink}} ({{.}}){{/contributorUsernameAsLink}}'
                }
            }
        }
    }
    deploy {
        maven {
            nexus2 {
                'maven-central' {
                    active = 'RELEASE'
                    url = 'https://s01.oss.sonatype.org/service/local'
                    closeRepository = true
                    releaseRepository = true
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}